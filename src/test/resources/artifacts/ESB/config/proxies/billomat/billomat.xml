<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<proxy name="billomat" startOnLoad="true" statistics="disable" trace="disable" transports="https,http"
       xmlns="http://ws.apache.org/ns/synapse">
    <target>
        <inSequence>
            <property name="apiUrl" expression="json-eval($.apiUrl)"/>
            <property name="apiKey" expression="json-eval($.apiKey)"/>
            <property name="clientId" expression="json-eval($.clientId)"/>
            <property name="firstName" expression="json-eval($.firstName)"/>
            <property name="lastName" expression="json-eval($.lastName)"/>
            <property name="salutation" expression="json-eval($.salutation)"/>
            <property name="numberPre" expression="json-eval($.numberPre)"/>
            <property name="number" expression="json-eval($.number)"/>
            <property name="name" expression="json-eval($.name)"/>
            <property name="email" expression="json-eval($.email)"/>
            <property name="perPage" expression="json-eval($.perPage)"/>
            <property name="clientNumber" expression="json-eval($.clientNumber)"/>
            <property name="city" expression="json-eval($.city)"/>
            <property name="contactId" expression="json-eval($.contactId)"/>
            <property name="page" expression="json-eval($.page)"/>
            <property name="title" expression="json-eval($.title)"/>
            <property name="date" expression="json-eval($.date)"/>
            <property name="invoiceId" expression="json-eval($.invoiceId)"/>
            <property name="status" expression="json-eval($.status)"/>
            <property name="discountDate" expression="json-eval($.discountDate)"/>
            <property name="unit" expression="json-eval($.unit)"/>
            <property name="quantity" expression="json-eval($.quantity)"/>
            <property name="unitPrice" expression="json-eval($.unitPrice)"/>
            <property name="description" expression="json-eval($.description)"/>
            <property name="itemId" expression="json-eval($.itemId)"/>
            <property name="deliveryNoteId" expression="json-eval($.deliveryNoteId)"/>
            <property name="from" expression="json-eval($.from)"/>
            <property name="deliveryNoteNumber" expression="json-eval($.deliveryNoteNumber)"/>
            <property name="templateId" expression="json-eval($.templateId)"/>
            <property name="emailBody" expression="json-eval($.emailBody)"/>
            <property name="recipients" expression="json-eval($.recipients)"/>
            <property name="subject" expression="json-eval($.subject)"/>
            <property name="fileName" expression="json-eval($.fileName)"/>
            <property name="fromEmail" expression="json-eval($.fromEmail)"/>
            <billomat.init>
                <apiUrl>{$ctx:apiUrl}</apiUrl>
                <apiKey>{$ctx:apiKey}</apiKey>
            </billomat.init>
            <switch source="get-property('transport','Action')">
                <case regex="urn:getClient">
                    <billomat.getClient>
                        <clientId>{$ctx:clientId}</clientId>
                    </billomat.getClient>
                </case>
                <case regex="urn:createClient">
                    <billomat.createClient>
                        <numberPre>{$ctx:numberPre}</numberPre>
                        <number>{$ctx:number}</number>
                        <name>{$ctx:name}</name>
                        <firstName>{$ctx:firstName}</firstName>
                        <lastName>{$ctx:lastName}</lastName>
                        <salutation>{$ctx:salutation}</salutation>
                        <email>{$ctx:email}</email>
                    </billomat.createClient>
                </case>
                <case regex="urn:listClients">
                    <billomat.listClients>
                        <name>{$ctx:name}</name>
                        <clientNumber>{$ctx:clientNumber}</clientNumber>
                        <firstName>{$ctx:firstName}</firstName>
                        <lastName>{$ctx:lastName}</lastName>
                        <perPage>{$ctx:perPage}</perPage>
                    </billomat.listClients>
                </case>
                <case regex="urn:updateClient">
                    <billomat.updateClient>
                        <numberPre>{$ctx:numberPre}</numberPre>
                        <number>{$ctx:number}</number>
                        <name>{$ctx:name}</name>
                        <firstName>{$ctx:firstName}</firstName>
                        <lastName>{$ctx:lastName}</lastName>
                        <salutation>{$ctx:salutation}</salutation>
                        <email>{$ctx:email}</email>
                        <clientId>{$ctx:clientId}</clientId>
                    </billomat.updateClient>
                </case>
                <case regex="urn:updateClient">
                    <billomat.updateClient>
                        <numberPre>{$ctx:numberPre}</numberPre>
                        <number>{$ctx:number}</number>
                        <name>{$ctx:name}</name>
                        <firstName>{$ctx:firstName}</firstName>
                        <lastName>{$ctx:lastName}</lastName>
                        <salutation>{$ctx:salutation}</salutation>
                        <clientId>{$ctx:clientId}</clientId>
                        <email>{$ctx:email}</email>
                    </billomat.updateClient>
                </case>
                <case regex="urn:createContact">
                    <billomat.createContact>
                        <clientId>{$ctx:clientId}</clientId>
                        <name>{$ctx:name}</name>
                        <city>{$ctx:city}</city>
                        <firstName>{$ctx:firstName}</firstName>
                        <salutation>{$ctx:salutation}</salutation>
                        <email>{$ctx:email}</email>
                    </billomat.createContact>
                </case>
                <case regex="urn:getContact">
                    <billomat.getContact>
                        <contactId>{$ctx:contactId}</contactId>
                    </billomat.getContact>
                </case>
                <case regex="urn:listContacts">
                    <billomat.listContacts>
                        <clientId>{$ctx:clientId}</clientId>
                        <page>{$ctx:page}</page>
                        <perPage>{$ctx:perPage}</perPage>
                    </billomat.listContacts>
                </case>
                <case regex="urn:updateContact">
                    <billomat.updateContact>
                        <city>{$ctx:city}</city>
                        <name>{$ctx:name}</name>
                        <firstName>{$ctx:firstName}</firstName>
                        <salutation>{$ctx:salutation}</salutation>
                        <email>{$ctx:email}</email>
                        <contactId>{$ctx:contactId}</contactId>
                    </billomat.updateContact>
                </case>
                <case regex="urn:createInvoice">
                    <billomat.createInvoice>
                        <clientId>{$ctx:clientId}</clientId>
                        <contactId>{$ctx:contactId}</contactId>
                        <numberPre>{$ctx:numberPre}</numberPre>
                        <number>{$ctx:number}</number>
                        <date>{$ctx:date}</date>
                        <title>{$ctx:title}</title>
                    </billomat.createInvoice>
                </case>
                <case regex="urn:getInvoice">
                    <billomat.getInvoice>
                        <invoiceId>{$ctx:invoiceId}</invoiceId>
                    </billomat.getInvoice>
                </case>
                <case regex="urn:listInvoices">
                    <billomat.listInvoices>
                        <clientId>{$ctx:clientId}</clientId>
                        <contactId>{$ctx:contactId}</contactId>
                        <status>{$ctx:status}</status>
                        <page>{$ctx:page}</page>
                        <perPage>{$ctx:perPage}</perPage>
                    </billomat.listInvoices>
                </case>
                <case regex="urn:updateInvoice">
                    <billomat.updateInvoice>
                        <numberPre>{$ctx:numberPre}</numberPre>
                        <number>{$ctx:number}</number>
                        <date>{$ctx:date}</date>
                        <discountDate>{$ctx:discountDate}</discountDate>
                        <title>{$ctx:title}</title>
                        <invoiceId>{$ctx:invoiceId}</invoiceId>
                    </billomat.updateInvoice>
                </case>
                <case regex="urn:createInvoiceItem">
                    <billomat.createInvoiceItem>
                        <invoiceId>{$ctx:invoiceId}</invoiceId>
                        <unit>{$ctx:unit}</unit>
                        <quantity>{$ctx:quantity}</quantity>
                        <unitPrice>{$ctx:unitPrice}</unitPrice>
                        <title>{$ctx:title}</title>
                        <description>{$ctx:description}</description>
                    </billomat.createInvoiceItem>
                </case>
                <case regex="urn:getInvoiceItem">
                    <billomat.getInvoiceItem>
                        <itemId>{$ctx:itemId}</itemId>
                    </billomat.getInvoiceItem>
                </case>
                <case regex="urn:listInvoiceItems">
                    <billomat.listInvoiceItems>
                        <invoiceId>{$ctx:invoiceId}</invoiceId>
                        <page>{$ctx:page}</page>
                        <perPage>{$ctx:perPage}</perPage>
                    </billomat.listInvoiceItems>
                </case>
                <case regex="urn:listInvoiceItems">
                    <billomat.listInvoiceItems>
                        <invoiceId>{$ctx:invoiceId}</invoiceId>
                        <page>{$ctx:page}</page>
                        <perPage>{$ctx:perPage}</perPage>
                    </billomat.listInvoiceItems>
                </case>
                <case regex="urn:updateInvoiceItem">
                    <billomat.updateInvoiceItem>
                        <unit>{$ctx:unit}</unit>
                        <quantity>{$ctx:quantity}</quantity>
                        <unitPrice>{$ctx:unitPrice}</unitPrice>
                        <title>{$ctx:title}</title>
                        <description>{$ctx:description}</description>
                        <itemId>{$ctx:itemId}</itemId>
                    </billomat.updateInvoiceItem>
                </case>
                <case regex="urn:createDeliveryNote">
                    <billomat.createDeliveryNote>
                        <numberPre>{$ctx:numberPre}</numberPre>
                        <number>{$ctx:number}</number>
                        <clientId>{$ctx:clientId}</clientId>
                        <contactId>{$ctx:contactId}</contactId>
                        <date>{$ctx:date}</date>
                        <title>{$ctx:title}</title>
                    </billomat.createDeliveryNote>
                </case>
                <case regex="urn:getDeliveryNote">
                    <billomat.getDeliveryNote>
                        <deliveryNoteId>{$ctx:deliveryNoteId}</deliveryNoteId>
                    </billomat.getDeliveryNote>
                </case>
                <case regex="urn:listDeliveryNotes">
                    <billomat.listDeliveryNotes>
                        <deliveryNoteNumber>{$ctx:deliveryNoteNumber}</deliveryNoteNumber>
                        <status>{$ctx:status}</status>
                        <from>{$ctx:from}</from>
                        <clientId>{$ctx:clientId}</clientId>
                        <contactId>{$ctx:contactId}</contactId>
                    </billomat.listDeliveryNotes>
                </case>
                <case regex="urn:completeInvoice">
                    <billomat.completeInvoice>
                        <templateId>{$ctx:templateId}</templateId>
                        <invoiceId>{$ctx:invoiceId}</invoiceId>
                    </billomat.completeInvoice>
                </case>
                <case regex="urn:sendInvoice">
                    <billomat.sendInvoice>
                        <emailBody>{$ctx:emailBody}</emailBody>
                        <recipients>{$ctx:recipients}</recipients>
                        <invoiceId>{$ctx:invoiceId}</invoiceId>
                        <subject>{$ctx:subject}</subject>
                        <fileName>{$ctx:fileName}</fileName>
                        <fromEmail>{$ctx:fromEmail}</fromEmail>
                    </billomat.sendInvoice>
                </case>
            </switch>
            <respond/>
        </inSequence>
        <outSequence>
            <log/>
            <send/>
        </outSequence>
    </target>
    <description/>
</proxy>