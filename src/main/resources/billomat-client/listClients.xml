<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<!-- Method Documentation URL: http://www.billomat.com/en/api/clients -->
<template name="listClients" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="page" description="No. of the page to return. Applies for paginated response."/>
    <parameter name="invoiceId" description="ID of an invoice of this client, multiple values seperated with commas."/>
    <parameter name="name" description="Filter results by company name."/>
    <parameter name="clientNumber" description="Filter results by client number."/>
    <parameter name="email" description="Filter results by e-mail address."/>
    <parameter name="firstName" description="First name of the contact person."/>
    <parameter name="lastName" description="Last name of the contact person."/>
    <parameter name="countryCode" description="Country code as ISO 3166 Alpha-2."/>
    <parameter name="note" description="Filter results by note."/>
    <parameter name="tags" description="Comma seperated list of tags."/>
    <parameter name="perPage" description="No. of entries to return per page when results are paginated."/>
    <parameter name="orderBy" description="Sorting orders to retrieve contacts."/>
    <sequence>
        <property name="uri.var.page" expression="$func:page"/>
        <property name="uri.var.invoiceId" expression="$func:invoiceId"/>
        <property name="uri.var.name" expression="$func:name"/>
        <property name="uri.var.clientNumber" expression="$func:clientNumber"/>
        <property name="uri.var.email" expression="$func:email"/>
        <property name="uri.var.firstName" expression="$func:firstName"/>
        <property name="uri.var.lastName" expression="$func:lastName"/>
        <property name="uri.var.countryCode" expression="$func:countryCode"/>
        <property name="uri.var.note" expression="$func:note"/>
        <property name="uri.var.tags" expression="$func:tags"/>
        <property name="uri.var.perPage" expression="$func:perPage"/>
        <property name="uri.var.orderBy" expression="$func:orderBy"/>
        <script language="js">
            <![CDATA[
            var firstName = mc.getProperty('uri.var.firstName');
            var lastName = mc.getProperty('uri.var.lastName');
            var note = mc.getProperty('uri.var.note');
            var perPage = mc.getProperty('uri.var.perPage');
            var apiKey = mc.getProperty('uri.var.apiKey');
            var countryCode = mc.getProperty('uri.var.countryCode');
            var name = mc.getProperty('uri.var.name');
            var invoiceId = mc.getProperty('uri.var.invoiceId');
            var page = mc.getProperty('uri.var.page');
            var clientNumber = mc.getProperty('uri.var.clientNumber');
            var email = mc.getProperty('uri.var.email');
            var tags = mc.getProperty('uri.var.tags');
            var orderBy = mc.getProperty('uri.var.orderBy');
            var urlQuery = '';
            if (page != null && page != "") {
               urlQuery += 'page=' + page + '&';
            }
            if (invoiceId != null && invoiceId != "") {
               urlQuery += 'invoice_id=' + invoiceId + '&';
            }
            if (name != null && name != "") {
               urlQuery += 'name=' + name + '&';
            }
            if (clientNumber != null && clientNumber != "") {
               urlQuery += 'client_number=' + clientNumber + '&';
            }
            if (email != null && email != "") {
               urlQuery += 'email=' + email + '&';
            }
            if (firstName != null && firstName != "") {
               urlQuery += 'first_name=' + firstName + '&';
            }
            if (lastName != null && lastName != "") {
               urlQuery += 'last_name=' + lastName + '&';
            }
            if (countryCode != null && countryCode != "") {
               urlQuery += 'country_code=' + countryCode + '&';
            }
            if (note != null && note != "") {
               urlQuery += 'note=' + note + '&';
            }
            if (tags != null && tags != "") {
               urlQuery += 'tags=' + tags + '&';
            }
            if (perPage != null && perPage != "") {
               urlQuery += 'per_page=' + perPage + '&';
            }
            if (orderBy != null && orderBy != "") {
               urlQuery += '&order_by=' + orderBy + '&';
            }
            if (apiKey != null && apiKey != "") {
               urlQuery += 'api_key=' + apiKey + '&';
            }
            // Add a leading '?' and remove the trailing '&'
            if (urlQuery != "") {
               urlQuery = '?' + urlQuery.toString().substring(0, urlQuery.toString().lastIndexOf("&"));
               mc.setProperty('uri.var.urlQuery',urlQuery);
            }
         ]]>
        </script>
        <call>
            <endpoint>
                <http method="get" uri-template="{+uri.var.apiUrl}/clients{+uri.var.urlQuery}"/>
            </endpoint>
        </call>
        <!-- Remove custom Headers from the API Response -->
        <header name="X-UA-Compatible" action="remove" scope="transport"/>
        <header name="X-Rate-Limit-Reset" action="remove" scope="transport"/>
        <header name="X-Rate-Limit-Remaining" action="remove" scope="transport"/>
        <header name="Vary" action="remove" scope="transport"/>
        <header name="Strict-Transport-Security" action="remove" scope="transport"/>
        <header name="Pragma" action="remove" scope="transport"/>
        <header name="Access-Control-Allow-Headers" action="remove" scope="transport"/>
        <header name="Access-Control-Max-Age" action="remove" scope="transport"/>
        <header name="Cache-Control" action="remove" scope="transport"/>
        <header name="Access-Control-Allow-Methods" action="remove" scope="transport"/>
        <header name="Access-Control-Allow-Origin" action="remove" scope="transport"/>
    </sequence>
</template>
